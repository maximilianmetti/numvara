function DDE = generalFickHess(x,xhat,b,db,ddb,f)
%%  Evaluate the Hessian of Fick's energy for the FE flow map
N  = length(x)-1;
ddE = @(basis,dx,dxhat,b,db,ddb,f) gallery('tridiag',...
             dxhat(2:N-1).*f(2:N-1)...
                    .*( (-1/(dx(2:N-1).^2))'...
                    +((db(2:N-1)./b(2:N-1)).^2+ddb(2:N-1)./b(2:N-1))*basis*(1-basis)),...
             dxhat(1:N-1).*f(1:N-1)...
                    .*( (1/(dx(1:N-1).^2))'...
                    +((db(1:N-1)./b(1:N-1)).^2+ddb(1:N-1)./b(1:N-1))*basis^2)...
            +dxhat(2:N).*f(2:N)...
                    .*( (1/(dx(2:N).^2))'...
                    +((db(2:N)./b(2:N)).^2+ddb(2:N)./b(2:N))*(1-basis)^2),...
             dxhat(2:N-1).*f(2:N-1)...
                    .*( (-1/(dx(2:N-1).^2))'...
                    +((db(2:N-1)./b(2:N-1)).^2+ddb(2:N-1)./b(2:N-1))*basis*(1-basis)) );

xm    = .5*(x(1:N)+x(2:N+1));
xhatm = .5*(xhat(1:N)+xhat(2:N+1));
dx    = -x(1:N)+x(2:N+1);
dxhat = -xhat(1:N)+xhat(2:N+1);

%%  Evaluate Energy Hessian element-wise via quadrature (Simpson's rule)
DDE = (  ddE(0.0,dx,dxhat,b(x(1:N)),  db(x(1:N)),  ddb(x(1:N)),  f(xhat(1:N) ))...
      +4*ddE(0.5,dx,dxhat,b(xm(1:N)), db(xm(1:N)), ddb(xm(1:N)), f(xhatm(1:N)))...
      	+ddE(1.0,dx,dxhat,b(x(2:N+1)),db(x(2:N+1)),ddb(x(2:N+1)),f(xhat(2:N+1)))   )/6;

clear xm xhatm dx dxhat;